{"version":"1","records":[{"hierarchy":{"lvl1":"Resource Gallery"},"type":"lvl1","url":"/","position":0},{"hierarchy":{"lvl1":"Resource Gallery"},"content":"Your First Python Tutorial\n\nA tutorial for getting started with Python aimed at scientists with experience in at least one other coding language. Designed to teach you Python, not package specific syntax.\n\n\npure python\n\ntutorial\n\npythia\n\nxdev\n\nUnidata Python Training\n\nIntroduction to Python for Atmospheric Science and Meteorology. Unidata is working to create a collection of online training materials focused on the use of Python in the atmospheric sciences. While our examples and scenarios may feature Unidata tools and data technologies, our aim is to present a generic set of freely available tools that are generally useful to scientists, educators, and students in the geosciences, broadly defined.\n\n\ncourse\n\nunidata\n\nUnidata Python Workshop - Jupyter Notebooks Introduction\n\nJupyter notebooks are a great way to have code, output, images, video, and other information in one place. Notebooks are an ideal tool for the student, research scientist, and even software developer. In this lesson we will go over the basic features of Jupyter notebooks and how to use them.\n\n\njupyter\n\nunidata\n\nAn Introduction to Earth and Environmental Data Science\n\nThis book grew out of a course developed at Columbia University called Research Computing in Earth Science. It was written mostly by Ryan Abernathey, with significant contributions from Kerry Key. By separating the book from the class, we hope to create an open-source community resource for python education in the Earth and Environmental Sciences.\n\n\ncourse\n\npangeo\n\nThe Climate Laboratory\n\nA hands on approach to climate physics and climate modeling. Fundamental climate processes are introduced through interactive and reproducible Python-based modeling exercises.  This JupyterBook serves as a course textbook at the University of Albany.\n\n\ncourse\n\nbook\n\nclimate science\n\natmospheric science\n\nclimlab\n\nEarth Analytics Python Course\n\nEarth analytics is an intermediate, multidisciplinary course that addresses major questions in Earth science and teaches students to use the analytical tools necessary to undertake exploration of heterogeneous ‘big scientific data’. This course is designed for graduate students and students participating in the Earth Data Analytics Professional Certificate.\n\n\ncourse\n\nEarth Data Science\n\nThis site contains open, tutorials and course materials covering topics including data integration, GIS and data intensive science.\n\n\ncourse\n\nGeohackweek 2019\n\nGeohackweek is a 5-day hackweek to be held at the University of Washington eScience Institute. Tutorials from the hackweek are available for everyone to follow (participants and non-participants alike).\n\n\ncourse\n\nResearch Software Engineering with Python\n\nWe believe every researcher should know how to write short programs that clean and analyze data in a reproducible way and how to use version control to keep track of what they have done. But just as some astronomers spend their careers designing telescopes, some researchers focus on building the software that makes research possible. People who do this are called research software engineers; the aim of this book is to get you ready for this role by helping you go from writing code for yourself to creating tools that help your entire field advance.\n\n\ncourse\n\nData Analysis with Python- Zero to Pandas\n\n\"Data Analysis with Python: Zero to Pandas\" is a practical and beginner-friendly introduction to data analysis covering the basics of Python, Numpy, Pandas, Data Visualization, and Exploratory Data Analysis.\n\n\ncourse\n\nMTH271- Mathematical Computing with Data\n\nIn this course, we will have multiple occasions to procure, analyze, and visualize data. We will study mathematical and statistical techniques to discern patterns in complex data. We shall do so in an ecosystem of python computing modules developed by open-source enthusiasts worldwide.\n\n\ncourse\n\nATSC301- Atmospheric Radiation and Remote Sensing\n\nThis course teaches radiation and remote sensing, but also covers: how to write clear, documented and tested code that can ingest, manipulate and display data, and how to turn equations into computer algorithms in Python.\n\n\ncourse\n\nremote sensing\n\nIntroduction to Geospatial Concepts\n\nThe goal of this lesson is to provide an introduction to core geospatial data concepts. It is intended for learners who have no prior experience working with geospatial data, and as a pre-requisite for the R for Raster and Vector Data lesson . This lesson can be taught in approximately 75 minutes and covers the following topics: Introduction to raster and vector data format and attributes, examples of data types commonly stored in raster vs vector format, an introduction to categorical vs continuous raster data and multi-layer rasters, an introduction to the file types and R packages used in the remainder of this workshop, an introduction to coordinate reference systems and the PROJ4 format,  and an overview of commonly used programs and applications for working with geospatial data.\n\n\ncourse\n\nDani Arribas-Bel Course Repositories\n\nA collection of courework repositories for various data science classes taught by Dani Arribas-Bel.\n\n\ncourse\n\ndata science\n\nCartopy Documentation\n\nCartopy is a Python package designed for geospatial data processing in order to produce maps and other geospatial data analyses.\n\n\ncartopy\n\ndocumentation\n\nCartopy Gallery\n\nVisual examples demonstrating some of the functionality of Cartopy, particularly its matplotlib interface.\n\n\ncartopy\n\ngallery\n\nContextily Documentation\n\ncontextily is a small Python 3 (3.6 and above) package to retrieve tile maps from the internet. It can add those tiles as basemap to matplotlib figures or write tile maps to disk into geospatial raster files. Bounding boxes can be passed in both WGS84 (EPSG:4326) and Spheric Mercator (EPSG:3857).\n\n\ncontextily\n\ndocumentation\n\ngallery\n\nContextily Tutorial\n\nWelcome to the taster guide for contextily, the package for contextual tiles in Python. In this notebook, we will show the basic functionality available in contextily, a package to work with web-tiles for background maps. To do that, we will use additional data to illustrate contextily can be integrated with other libraries such as geopandas and rasterio.\n\n\ncontextily\n\ntutorial\n\nDask\n\nDask provides advanced parallelism for analytics, enabling performance at scale for the tools you love.\n\n\ndask\n\ndocumentation\n\nDask Tutorial\n\nDask is a parallel computing library that scales the existing Python ecosystem. This tutorial will introduce Dask and parallel data analysis more generally.\n\n\ndask\n\ntutorial\n\nGeoCAT Tutorial\n\nThe examples below show GeoCAT-comp functions being utilized in real-world use cases. They also demonstrate how GeoCAT-comp can be used to make plots with Matplotlib (using Cartopy) and PyNGL (work in progress).\n\n\ngeocat-comp\n\ntutorial\n\nGeoCAT Gallery\n\nA gallery of plotting examples from GeoCat.\n\n\ngeocat-comp\n\ngeocat-viz\n\ngallery\n\ndata visualization\n\nGeoPandas Documentation\n\nGeoPandas is an open source project to make working with geospatial data in python easier. GeoPandas extends the datatypes used by pandas to allow spatial operations on geometric types. Geometric operations are performed by shapely. Geopandas further depends on fiona for file access and matplotlib for plotting.\n\n\ngeopandas\n\ndocumentation\n\nGeoPandas Gallery\n\nExamples that show off the functionality in GeoPandas. They highlight many of the things you can do with this package, and show off some best-practices.\n\n\ngeopandas\n\ngallery\n\nhvPlot\n\nhvPlot provides a high-level plotting API built on HoloViews that provides a general and consistent API for plotting data in all the abovementioned formats. hvPlot can integrate neatly with the individual libraries if an extension mechanism for the native plot APIs is offered, or it can be used as a standalone component.\n\n\nhvPlot\n\ndocumentation\n\nhvPlot Tutorial\n\nThe user guide provides a detailed introduction to the API and features of hvPlot. In the Introduction you will learn how to activate the plotting API and start using it. Next you will learn to use the API for tabular data and get an overview of the types of plots you can generate and how to customize them; including how to customize interactivity using widgets. Next is an overview on how to display and save plots in the notebook, on the commandline, and from a script. Another section will introduce you to generating subplots from your data. Once the basics are covered you can learn how to use the plotting API for specific types of data including streaming data, gridded data network graphs, geographic data, and timeseries data.\n\n\nhvPlot\n\ntutorial\n\ndata visualization\n\nhvPlot Gallery\n\nIncomplete Reference Gallery containing some small examples of different plot types using hvPlot.\n\n\nhvPlot\n\ngallery\n\ndata visualization\n\nIpyleaflet\n\nInteractive maps in the Jupyter notebook.\n\n\nipyleaflet\n\ndocumentation\n\nMatplotlib\n\nMatplotlib is a comprehensive library for creating static, animated, and interactive visualizations in Python.\n\n\nmatplotlib\n\ndocumentation\n\ndata visualization\n\nMatplotlib Tutorial\n\nThis page contains more in-depth guides for using Matplotlib. It is broken up into beginner, intermediate, and advanced sections, as well as sections covering specific topics.\n\n\nmatplotlib\n\ntutorial\n\ndata visualization\n\nMatplotlib Gallery\n\nThis gallery contains examples of the many things you can do with Matplotlib.\n\n\nmatplotlib\n\ngallery\n\ndata visualization\n\nMetPy\n\nMetPy is a collection of tools in Python for reading, visualizing, and performing calculations with weather data.\n\n\nmetpy\n\ndocumentation\n\nMetPy Tutorial\n\nThis collection of tutorials (under development) demonstrates the use of MetPy to perform common meteorological tasks.\n\n\nmetpy\n\ntutorial\n\nUnidata Python Workshop - MetPy\n\nMetPy is a modern meteorological open-source toolkit for Python. It is a maintained project of Unidata to serve the academic meteorological community. MetPy consists of three major areas of functionality: plots, calculations, and file i/o.\n\n\nmetpy\n\ntutorial\n\nMetPy Gallery\n\nExamples of using a variety of MetPy’s functionality together.\n\n\nmetpy\n\ngallery\n\nMetPy Mondays\n\nA weekly video series showing how to use MetPy or other Python libraries to solve problems relevant to geoscience applications.\n\n\nmetpy\n\nvideo\n\nNumpy\n\nThe fundamental package for scientific computing with Python.\n\n\nnumpy\n\ndocumentation\n\nNumpy Tutorials\n\nA curated collection of external resources teaching numpy from beginner to advanced uses.\n\n\nnumpy\n\nIntro to Numerical Computing with NumPy\n\nNumPy provides Python with a powerful array processing library and an elegant syntax that is well suited to expressing computational algorithms clearly and efficiently. We'll introduce basic array syntax and array indexing, review some of the available mathematical functions in NumPy, and discuss how to write your own routines. Along the way, we'll learn just enough about matplotlib to display results from our examples.\n\n\nnumpy\n\nvideo\n\nPandas\n\nPandas is a fast, powerful, flexible and easy to use open source data analysis and manipulation tool, built on top of the Python programming language.\n\n\npandas\n\ndocumentation\n\nPandas Tutorials\n\nTutorial for getting started with pandas.\n\n\npandas\n\ntutorial\n\nPandas Gallery\n\nA gallery of example pandas functionality.\n\n\npandas\n\ngallery\n\nRasterio\n\nGeographic information systems use GeoTIFF and other formats to organize and store gridded raster datasets such as satellite imagery and terrain models. Rasterio reads and writes these formats and provides a Python API based on Numpy N-dimensional arrays and GeoJSON.\n\n\nrasterio\n\ndocumentation\n\nRasterio Tutorial\n\nThis document explains how to use Rasterio to read existing files and to create new files. Some advanced topics are glossed over to be covered in more detail elsewhere in Rasterio’s documentation.\n\n\nrasterio\n\ntutorial\n\nSiphon\n\nSiphon is a collection of Python utilities for downloading data from remote data services. Much of Siphon’s current functionality focuses on access to data hosted on a THREDDS Data Server. It also provides clients to a variety of simple web services.\n\n\nsiphon\n\ndocumentation\n\nSiphon Gallery\n\nExamples of using Siphon’s functionality.\n\n\nsiphon\n\ngallery\n\nWRF-Python\n\nA collection of diagnostic and interpolation routines for use with output from the Weather Research and Forecasting (WRF-ARW) Model.\n\n\nwrf-python\n\ndocumentation\n\nWRF-Python Gallery\n\nExamples of how wrf-python can be used to make plots with matplotlib (with basemap and cartopy) and PyNGL. None of these examples make use of xarray’s builtin plotting functions, since additional work is most likely needed to extend xarray in order to work correctly.\n\n\nwrf-python\n\ngallery\n\nXarray\n\nxarray (formerly xray) is an open source project and Python package that makes working with labelled multi-dimensional arrays simple, efficient, and fun!\n\nXarray introduces labels in the form of dimensions, coordinates and attributes on top of raw NumPy-like arrays, which allows for a more intuitive, more concise, and less error-prone developer experience. The package includes a large and growing library of domain-agnostic functions for advanced analytics and visualization with these data structures.\n\nXarray is inspired by and borrows heavily from pandas, the popular data analysis package focused on labelled tabular data. It is particularly tailored to working with netCDF files, which were the source of xarray’s data model, and integrates tightly with dask for parallel computing.\n\n\nxarray\n\ndocumentation\n\nXarray Tutorial\n\nA collection of tutorials provided by the Xarray developers.\n\n\nxarray\n\ndask\n\ntutorial\n\nPython Programming for Earth Science Students\n\nPython Programming for Earth Science Students\n\ntutorial\n\npure python\n\npandas\n\nscipy\n\nnumpy\n\nmatplotlib\n\nPangeo Gallery\n\nA gallery of different Pangeo use cases\n\njupyter\n\nxarray\n\ndask\n\nmatplotlib\n\nintake\n\nxgcm\n\nholoviews\n\npandas\n\nnumpy\n\ngallery\n\ntutorial\n\nglaciology\n\nremote sensing\n\nphysical oceanography\n\nhydrology\n\npangeo\n\nPython for Atmosphere and Ocean Science\n\nLesson materials for a one-day workshop on using Python in the atmosphere and ocean sciences. Useful for any geoscientist working with raster (a.k.a. “gridded”) data, the lessons cover packages/tools including conda, xarray, dask and netCDF, as well as best practices including functions, command line programs, defensive programming, provenance tracking and version control via git/GitHub.\n\nxarray\n\ndask\n\ncartopy\n\nnumpy\n\nmatplotlib\n\ncourse\n\natmospheric science\n\nclimate science\n\nPython for Geosciences\n\nThis is a short overview of how Python is used in science and particularly in geosciences targeting people who already know programming (e.g. Matlab). \n\nmatplotlib\n\nscipy\n\npandas\n\nxarray\n\ncartopy\n\ncourse\n\ntutorial\n\nvideo\n\natmospheric science\n\nclimate science\n\nphysical oceanography\n\ndata science\n\nEnvironmental Data Science Book\n\nA living, open and community-driven resource to showcase and support computational notebooks for collaborative, reproducible and transparent Environmental Science\n\npangeo\n\npooch\n\nintake\n\npystac\n\npandas\n\ngeopandas\n\nxarray\n\ndask\n\nmatplotlib\n\nholoviews\n\ncartopy\n\nbook\n\ngallery\n\nenvironmental science\n\nclimate science\n\necology\n\nhydrology\n\nphysical geography\n\nremote sensing\n\ndata science\n\nThe Alan Turing Institute\n\nYour First Python Tutorial - Reading in a .txt File\n\nRecording from the Python Tutorial Seminar Series designed to teach you Python, not package specific syntax. This lessons covers setting up a work environment and opening a .txt file. The content to follow along with this video is hosted on the <A href=\"https://ncar.github.io/python-tutorial/tutorials/yourfirst.html\">Xdev Python Tutorial website</A>.\n\n\npure python\n\nvideo\n\ntutorial\n\npythia\n\nxdev\n\nYour First Python Tutorial - Creating a Data Dictionary\n\nRecording from the Python Tutorial Seminar Series designed to teach you Python, not package specific syntax. This lessons covers creating a data dictionary. The content to follow along with this video is hosted on the <A href=\"https://ncar.github.io/python-tutorial/tutorials/yourfirst.html#creating-a-data-dictionary\">Xdev Python Tutorial website</A>.\n\n\npure python\n\nvideo\n\ntutorial\n\npythia\n\nxdev\n\nYour First Python Tutorial - Writing Functions\n\nRecording from the Python Tutorial Seminar Series designed to teach you Python, not package specific syntax. This lessons covers how to write and call functions in Python. The content to follow along with this video is hosted on the <A href =\"https://ncar.github.io/python-tutorial/tutorials/yourfirst.html#writing-functions\">Xdev Python Tutorial website</A>.\n\n\npure python\n\nvideo\n\ntutorial\n\npythia\n\nxdev\n\nYour First Python Tutorial - Creating Your Own Package\n\nRecording from the Python Tutorial Seminar Series designed to teach you Python, not package specific syntax. This lessons covers how to create and call modules and packages. The content to follow along with this video is hosted on the <A href=\"https://ncar.github.io/python-tutorial/tutorials/yourfirst.html#first-python-package\">Xdev Python Tutorial website</A>.\n\n\npure python\n\nvideo\n\ntutorial\n\npythia\n\nxdev\n\nYour First Python Tutorial - Using a Built-In Package and Publishing Your Package\n\nRecording from the Python Tutorial Seminar Series designed to teach you Python, not package specific syntax. This lessons covers how to use your first external buil-in package, `math`, and how to publish your package. The content to follow along with this video is hosted on the <A href=\"https://ncar.github.io/python-tutorial/tutorials/yourfirst.html#using-a-built-in-package\">Xdev Python Tutorial website</A>.\n\n\npure python\n\nvideo\n\ntutorial\n\npythia\n\nxdev\n\nPython Tutorial Seminar Series - Jupyter Notebooks\n\nRecording from the Python Tutorial Seminar Series introducing JupyterLab and Jupyter Notebooks.\n\n\njupyter\n\nvideo\n\ntutorial\n\npythia\n\nxdev\n\nPython Tutorial Seminar Series - Numpy\n\nRecording from the Python Tutorial Seminar Series introducing the Python Package `numpy`. The content to follow along with this video is hosted on this <A href=\"https://colab.research.google.com/drive/1zcjaGXofLzUXkQzJKnANE9Z3yFUt0q7E?\">Numpy Google Collab</A>.\n\n\nnumpy\n\nvideo\n\ntutorial\n\npythia\n\nxdev\n\nPython Tutorial Seminar Series - Matplotlib\n\nRecording from the Python Tutorial Seminar Series introducing the Python Package `matplotlib`. The content to follow along with this video is hosted on this <A href=\"https://github.com/anissa111/matplotlib-tutorial\">Matplotlib Tutorial GitHub Repository</A>.\n\n\nmatplotlib\n\nvideo\n\ntutorial\n\ndata visualization\n\npythia\n\nxdev\n\nPython Tutorial Seminar Series - Object Oriented Programming\n\nRecording from the Python Tutorial Seminar Series introducing Object Oriented Programming. The content to follow along with this video is hosted in this <A href=\"https://github.com/pilotchute/oop_hrrr_tutorial\">Object Oriented Programming Tutorial GitHub Repository</A>.\n\n\nvideo\n\ntutorial\n\npythia\n\nxdev\n\nPython Tutorial Seminar Series - Cartopy\n\nRecording from the Python Tutorial Seminar Series introducing the Python Package `cartopy`. The content to follow along with this video is hosted in this <A href=\"https://github.com/michaelavs/cartopy_tutorial\">Cartopy Tutorial GitHub Repository</A>.\n\n\nmatplotlib\n\ncartopy\n\nvideo\n\ntutorial\n\ndata visualization\n\npythia\n\nxdev\n\nPython Tutorial Seminar Series - Git and GitHub\n\nRecording from the Python Tutorial Seminar Series introducing the tools Git and GitHub. The content to follow along with this tutorial is hosted in this <A href=\"https://github.com/NCAR/git-github-demo\">Git and GitHub Demo GitHub Repository</A>.\n\n\ngit\n\nvideo\n\ntutorial\n\npythia\n\nxdev\n\nPython Tutorial Seminar Series - Pandas\n\nRecording from the Python Tutorial Seminar Series introducing the Python Package `pandas`. The content to follow along with this video is hosted in this <A href=\"https://github.com/mgrover1/ncar_pandas_tutorial\">Pandas Tutorial GitHub Repository</A>.\n\n\npandas\n\nvideo\n\ntutorial\n\npythia\n\nxdev\n\nPython Tutorial Seminar Series - Xarray Part 1\n\nRecording from the Python Tutorial Seminar Series introducing the Python Package `xarray`. This is the first lesson of a two part series. The content to follow along with this video is hosted in this <A href=\"https://github.com/andersy005/xarray-tutorial\">Xarray Tutorial GitHub Repository</A>.\n\n\nxarray\n\nvideo\n\ntutorial\n\npythia\n\nxdev\n\nPython Tutorial Seminar Series - Xarray Part 2\n\nRecording from the Python Tutorial Seminar Series introducing the Python Package `xarray`. This is the second lesson of a two part series. The content to follow along with this video is hosted in this <A href=\"https://github.com/andersy005/xarray-tutorial\">Xarray Tutorial GitHub Repository</A>.\n\n\nxarray\n\nvideo\n\ntutorial\n\npythia\n\nxdev\n\nPython Tutorial Seminar Series - Dask Part 1\n\nRecording from the Python Tutorial Seminar Series introducing the Python Package `dask`. This is the first lesson of a two part series. The content to follow along with this video is hosted in this <A href=\"https://github.com/andersy005/xarray-tutorial\">Xarray Tutorial GitHub Repository</A>.\n\n\ndask\n\nvideo\n\ntutorial\n\npythia\n\nxdev\n\nPython Tutorial Seminar Series - Dask Part 2\n\nRecording from the Python Tutorial Seminar Series introducing the Python Package `dask`. This is the second lesson of a two part series. The content to follow along with this video is hosted in this <A href=\"https://github.com/andersy005/xarray-tutorial\">Xarray Tutorial GitHub Repository</A>.\n\n\ndask\n\nvideo\n\ntutorial\n\npythia\n\nxdev\n\nPython Tutorial Seminar Series - Plotting with GeoCAT\n\nRecording from the Python Tutorial Seminar Series introducing advanced plotting techniques and highlighting tools developed by GeoCAT. The content to follow along with this video is hosted in this <A href=\"https://github.com/anissa111/plotting-with-geocat-tutorial\">Plotting with GeoCat GitHub Repository</A>.\n\n\ngeocat-viz\n\nvideo\n\ntutorial\n\ndata visualization\n\npythia\n\nxdev\n\nPython Tutorial Seminar Series - GeoCAT-Comp\n\nRecording from the Python Tutorial Seminar Series introducing `geocat-comp`. The content to follow along with this video is hosted in this <A href=\"https://github.com/pilotchute/geocat_comp_tutorial\">GeoCat-Comp GitHub Repository</A>.\n\n\ngeocat-comp\n\nvideo\n\ntutorial\n\npythia\n\nxdev\n\nThe Pythia Foundations Book\n\nBrought to you by Project Pythia, this growing collection covers the foundational skills everyone needs to get started with scientific computing in the open-source Python ecosystem.\n\n\nbook\n\npythia\n\nPythia Foundations - Getting started with Python\n\nThis chapter of the Pythia Foundations book covers Python spin-up for new users. Here you will look at your first Python code and learn to run/install Python on various platforms.\n\n\nbook\n\npythia\n\npure python\n\nPythia Foundations - Getting started with Jupyter\n\nThis chapter of the Pythia Foundations book covers Python spin-up using Jupyter. Here you will learn about the JupyterLab interface and markdown formatting.\n\n\nbook\n\npythia\n\njupyter\n\nPythia Foundations - Getting started with GitHub\n\nThis chapter of the Pythia Foundations book covers GitHub: what it is, basic version control, and how to open a pull request.\n\n\nbook\n\npythia\n\ngit\n\nPythia Foundations - Numpy\n\nThis chapter of the Pythia Foundations book covers the Python package NumPy: NumPy basics, intermediate NumPy, and NumPy broadcasting.\n\n\nbook\n\npythia\n\nnumpy\n\nPythia Foundations - Matplotlib\n\nThis chapter of the Pythia Foundations book covers basics of the Python package Matplotlib.\n\n\nbook\n\npythia\n\nmatplotlib\n\ndata visualization\n\nPythia Foundations - Cartopy\n\nThis chapter of the Pythia Foundations book introduces the Python package Cartopy, a package designed for geospatial data processing and used for its ability to produce maps.\n\n\nbook\n\npythia\n\ncartopy\n\ndata visualization\n\nPythia Foundations - Datetime\n\nThis section of the Pythia Foundations book contains tutorials on dealing with times and calendars in scientific Python, beginning with use of the datetime standard library.\n\n\nbook\n\npythia\n\ndatetime\n\nPythia Foundations - Pandas\n\nThis section of the Pythia Foundations book covers Pandas, a very powerful library for working with tabular data (i.e. anything you might put in a spreadsheet – a common data type in the geosciences).\n\n\nbook\n\npythia\n\npandas\n\nPythia Foundations - Data Formats\n\nThis section of the Pythia Foundations book covers how to interact in Python with data file formats in widespread use in the geosciences, such as NetCDF.\n\n\nbook\n\npythia\n\ndata formats\n\nnetCDF4\n\nPythia Foundations - Xarray\n\nThis section of the Pythia Foundations book contains tutorials on using Xarray. Xarray is used widely in the geosciences and beyond for analysis of gridded N-dimensional datasets.\n\n\nbook\n\npythia\n\nxarray\n\nClimatematch Academy\n\nClimatematch Academy (CMA) is a wide-reaching, inclusive and approachable program aimed to introduce computational methods for climate science. CMA strives to create a globally diverse climate sciences community, trained on cutting edge techniques to access and analyze open-source modeled and observational climate data.\n\n\ncourse\n\nclimate science\n\nneuromatch\n\npythia\n\nPlotting Earth Science Data\n\nA guide to analyze and plot Earth Science data for Scientist of all programming skill levels, using L-1 data product from CYGNSS mission as an example.\n\n\ncartopy\n\nxarray\n\nnumpy\n\nmatplotlib\n\nnetCDF4\n\ndata visualization\n\nremote sensing\n\nHerbie: Retrieve NWP Model Data\n\nHerbie is a python package that downloads recent and archived numerical weather prediction (NWP) model output from different cloud archive sources. Its most popular capability is to download HRRR model data. NWP data in the GRIB2 format can be read with xarray+cfgrib.\n\n\nxarray\n\ncfgrib\n\nThe Earth Science Box Modelling Toolkit\n\nESBMTK is a python library that aims to simplify typical box modeling projects in the Earth-Sciences.\nIt uses a declarative approach to describe models, and abstracts typical modeling tasks like gas-exchange and carbonate dissolution through python classes. See the\nmanual at https://esbmtk.readthedocs.io/en/latest for installation instructions usage, and example code.\n\n\nesbmtk\n\nmatplotlib\n\nnumpy\n\npandas\n\ncode\n\nEarth System Science\n\nChemical Oceanography\n\nThe PO.DAAC Cookbook\n\nA place to find NASA ocean, climate, and surface water data recipes and tutorials for the Physical Oceanography Distributed Active Archive Center (PO.DAAC) datasets, tools & services!\n\n\nearthaccess\n\nxarray\n\nbook\n\ntutorial\n\nRemote sensing\n\nOceanography\n\nHydrology\n\nPhysical Oceanography Distributed Active Archive Center (PO.DAAC)\n\nJet Propulsion Laboratory\n\nCalifornia Institute of Technology\n\nUXarray\n\nXarray extension for unstructured climate and global weather data\n\nxarray\n\ndask\n\nnumba\n\nnumpy\n\nholoviews\n\nmatplotlib\n\ndocumentation\n\ntutorial\n\nUnstructured Grids\n\nData Analysis\n\nData Visualization\n\nAtmospheric Science\n\nClimate Science\n\nPangeo\n\nRaijin\n\nSEATS\n\nGeoCAT Applications\n\nGeoCAT Applications is a community resource managed by the GeoCAT team. Inspired by the NCL Applications page, this is designed to be a quick reference demonstrating capabilities within the Scientific Python Ecosystem that may be relevant to your geoscience workflows.\n\n\ndocumentation","type":"content","url":"/","position":1}]}